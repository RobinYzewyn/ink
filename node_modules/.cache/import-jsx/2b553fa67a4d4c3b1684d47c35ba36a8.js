'use strict';

const React = require('react');

const {
  Text
} = require('ink');

const {
  useState,
  useEffect
} = require('react');

const App = () => {
  const [counter, setCounter] = useState(0);
  const [number, setNumber] = useState(0);
  useEffect(() => {
    const timer = setInterval(() => {
      setCounter(previousCounter => previousCounter + 1);
    }, 100);
    return () => {
      clearInterval(timer);
    };
  }, []);

  const currentNumber = () => {
    number = Math.floor(Math.random() * 100);
    setNumber(number);
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, null, "Hoger of lager dan: ", number));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIlRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkFwcCIsImNvdW50ZXIiLCJzZXRDb3VudGVyIiwibnVtYmVyIiwic2V0TnVtYmVyIiwidGltZXIiLCJzZXRJbnRlcnZhbCIsInByZXZpb3VzQ291bnRlciIsImNsZWFySW50ZXJ2YWwiLCJjdXJyZW50TnVtYmVyIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNDLEVBQUFBO0FBQUQsSUFBU0QsT0FBTyxDQUFDLEtBQUQsQ0FBdEI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQSxRQUFGO0FBQVlDLEVBQUFBO0FBQVosSUFBMEJILE9BQU8sQ0FBQyxPQUFELENBQXZDOztBQUdBLE1BQU1JLEdBQUcsR0FBRyxNQUFNO0FBQ2pCLFFBQU0sQ0FBQ0MsT0FBRCxFQUFVQyxVQUFWLElBQXdCSixRQUFRLENBQUMsQ0FBRCxDQUF0QztBQUNBLFFBQU0sQ0FBQ0ssTUFBRCxFQUFTQyxTQUFULElBQXNCTixRQUFRLENBQUMsQ0FBRCxDQUFwQztBQUVBQyxFQUFBQSxTQUFTLENBQUMsTUFBTTtBQUNmLFVBQU1NLEtBQUssR0FBR0MsV0FBVyxDQUFDLE1BQU07QUFDL0JKLE1BQUFBLFVBQVUsQ0FBQ0ssZUFBZSxJQUFJQSxlQUFlLEdBQUcsQ0FBdEMsQ0FBVjtBQUNBLEtBRndCLEVBRXRCLEdBRnNCLENBQXpCO0FBSUEsV0FBTyxNQUFNO0FBQ1pDLE1BQUFBLGFBQWEsQ0FBQ0gsS0FBRCxDQUFiO0FBQ0EsS0FGRDtBQUdBLEdBUlEsRUFRTixFQVJNLENBQVQ7O0FBVUEsUUFBTUksYUFBYSxHQUFHLE1BQUs7QUFDMUJOLElBQUFBLE1BQU0sR0FBR08sSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxLQUFnQixHQUEzQixDQUFUO0FBQ0FSLElBQUFBLFNBQVMsQ0FBQ0QsTUFBRCxDQUFUO0FBQ0EsR0FIRDs7QUFLQSxzQkFBTyx1REFDUCxvQkFBQyxJQUFELGdDQUEyQkEsTUFBM0IsQ0FETyxDQUFQO0FBSUEsQ0F2QkQ7O0FBeUJBVSxNQUFNLENBQUNDLE9BQVAsR0FBaUJkLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge1RleHR9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXHRjb25zdCBbY291bnRlciwgc2V0Q291bnRlcl0gPSB1c2VTdGF0ZSgwKTtcblx0Y29uc3QgW251bWJlciwgc2V0TnVtYmVyXSA9IHVzZVN0YXRlKDApO1xuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cdFx0XHRzZXRDb3VudGVyKHByZXZpb3VzQ291bnRlciA9PiBwcmV2aW91c0NvdW50ZXIgKyAxKTtcblx0XHR9LCAxMDApO1xuXG5cdFx0cmV0dXJuICgpID0+IHtcblx0XHRcdGNsZWFySW50ZXJ2YWwodGltZXIpO1xuXHRcdH07XG5cdH0sIFtdKTtcblxuXHRjb25zdCBjdXJyZW50TnVtYmVyID0gKCkgPT57XG5cdFx0bnVtYmVyID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwKTtcblx0XHRzZXROdW1iZXIobnVtYmVyKTtcblx0fVxuXG5cdHJldHVybiA8PlxuXHQ8VGV4dD5Ib2dlciBvZiBsYWdlciBkYW46IHtudW1iZXJ9PC9UZXh0PlxuXHRcblx0PC8+O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG4iXX0=